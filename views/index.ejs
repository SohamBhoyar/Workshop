<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Web Dev Workshop</title>
    <link rel="icon" href="icon2-modified.png" type="image/icon type">
    <link rel="stylesheet" href="style.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.128/examples/js/loaders/GLTFLoader.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=DM+Serif+Display:ital@0;1&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body,
        html {
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
            overflow-x: hidden;
            /* background-color: #000; */
            color: white;
        }

        canvas {
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            /* Ensure the canvas is in the background */
        }

        .hero {
            text-align: center;
            padding: 100px 20px;
            position: relative;
            z-index: 1;
            /* Ensure content is above the canvas */
        }

        .hero h1 {
            font-size: 78px;
            font-weight: bold;
            line-height: 1.4;
            font-family: "DM Serif Display", serif;
            font-weight: 400;
            /* font-style: italic; */


        }

        .hero h3 {
            color: #faa01a;
            font-size: 38px;
        }

        .hero p {
            margin-bottom: 40px;
            font-family: "Poppins", serif;
            font-weight: 400;
            font-style: normal;
        }

        .subtext {
            font-size: 18px;
            margin: 20px 0;
        }

        .subtext a {
            color: #00e6ac;
            text-decoration: none;
        }

        .cta-btn {
            margin-top: 40px;
            padding: 15px 30px;
            background-color: #00e6ac;
            color: #000;
            text-decoration: none;
            font-weight: bold;
            border-radius: 50px;
        }

        .cta-btn:hover {
            background-color: #00cca1;
        }

        main {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0;
            /* z-index: 1; */
            background-color: #000;

        }

        .video {
            width: 100%;
            max-width: 1000px;
            padding: 10px;
        }

        .video video {
            width: 100%;
            height: auto;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(249, 247, 247, 0.3);
        }

        footer {
            background-color: #000000;
            color: #fff;
            padding: 30px 20px;
        }

        .footer-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            align-items: center;
        }

        .footer-container p {
            text-align: center;
            font-family: "Poppins", serif;
            font-weight: 300;
            font-style: italic;
        }


        .alert {
            color: #00cca1;
            font-family: "Poppins", serif;
            font-weight: 400;
            font-style: italic;
            font-weight: bold;
            margin-top: 20px;
        }

        .flash {
            display: flex;
            justify-content: center;
        }
        #head{
            font-size: 88px;
            color: #e9900b;
            font-family: "DM Serif Display", serif;
            font-weight: 600;
        }



        /* Responsive styling */
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 36px;
            }
            #head{
                font-size: 46px;
            }

            .stats {
                flex-direction: column;
            }

            .stat {
                margin: 20px 0;
            }

            .cta-btn {
                padding: 10px 20px;
            }
        }



        @media (max-width: 480px) {
            .hero h1 {
                font-size: 30px;
            }
            #head{
                font-size: 46px;
            }

            .hero h3 {
                font-size: 18px;
            }


            .nav-links {
                display: none;
            }

            .cta-btn {
                font-size: 14px;
            }
        }
    </style>
</head>

<body>
    <canvas id="backgroundCanvas"></canvas> <!-- Define the canvas in the body -->
    <div class="flash">
        <% if (messages.success) { %>
            <div class="alert alert-success">
                <%= messages.success %>
            </div>
            <% } %>
    </div>

    <header>
        <div class="hero">
            <h1>INTRODUCING </h1>
            <H1>WEB DEVELOPMENT</H1>
            <H3>WORKSHOP</H3>
            <h1 id="head">By CODEFORGE</h1>
            <p class="subtext">Unlock the <a href="">power</a> of web development with hands-on learning..</p>
            <a href="registration" class="cta-btn">Register</a>
        </div>
    </header>

    <main>
        <div class="video">
            
        </div>
    </main>

    <footer>
        <div class="footer-container">
            <div class="footer-content">
                <p>Empowering your web journey, one line of code at a time.</p>
                <p style="background-color: #1d1c1b; margin-top: 10px; "><b>Contact: 876-695-0658</b></p>
            </div>
        </div>
    </footer>


    <script>
        let scene, camera, renderer, model;
        let clock = new THREE.Clock(); // Create a clock to control the oscillation timing

        function init() {
            scene = new THREE.Scene();

            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.set(0, 150, 500); // Adjust the camera position as needed

            renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('backgroundCanvas'), antialias: true });
            renderer.setSize(window.innerWidth, window.innerHeight);

            // Ambient Light
            const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
            scene.add(ambientLight);

            // Directional Light
            const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
            directionalLight.position.set(10, 10, 10);
            scene.add(directionalLight);

            // GLTF Loader
            const loader = new THREE.GLTFLoader();
            loader.load('./cyber_spider_lady.glb', (gltf) => {
                model = gltf.scene;

                // Adjust the model scale
                model.scale.set(0.5, 0.5, 0.5);

                // Adjust the model position (moving it slightly down)
                model.position.set(30, -1000, 30); // Moves model down vertically (adjust Y value as needed)

                scene.add(model);
            }, undefined, (error) => {
                console.error('An error occurred while loading the model:', error);
            });

            // Handle window resizing
            window.addEventListener('resize', () => {
                renderer.setSize(window.innerWidth, window.innerHeight);
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
            });
        }

        function animate() {
            requestAnimationFrame(animate);

            if (model) {
                // Stop the rotation and make the model oscillate along the Y-axis
                let time = clock.getElapsedTime();
                model.position.y = -100 + Math.sin(time) * 20; // Oscillating effect on the Y-axis, adjust the values as needed
            }

            renderer.render(scene, camera);
        }

        // Initialize and start animation
        init();
        animate();
    </script>
</body>

</html>